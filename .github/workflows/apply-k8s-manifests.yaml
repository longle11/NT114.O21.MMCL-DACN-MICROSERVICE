name: deploy-manifests

on:
  push:
    branches:
      - "main"
    paths:
      - "infras/cloud_watch/**"
      - "infras/argocd.yaml"
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup Terraform with specified version on the runner
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      - run: aws eks --region ${{ secrets.AWS_REGION }} update-kubeconfig --name ${{secrets.AWS_CLUSTER_NAME}}

      - name: Create Certificate for domain name
        run: |
          if kubectl get pods -n cert-manager | grep "cert-manager"; then
            echo "This cert-manager is already existed"
          else 
            kubectl apply -f https://github.com/cert-manager/cert-manager/releases/download/v1.13.2/cert-manager.yaml
          fi

          
      - name: Create secret for jwt token to authenticate
        run: |
          if kubectl get secret -n default | grep "jwt-secret"; then
            echo "This secret is already existed"
          else
            kubectl create secret generic jwt-secret --from-literal=jwt_key=${{secrets.SECRET_JWT_KEY}}
          fi


      - name: Get pods
        run: kubectl get pods
      # Initial AWS CloudWatch Agent
      - name: Create Namespace for AWS CloudWatch Agent
        run: kubectl apply -f https://raw.githubusercontent.com/aws-samples/amazon-cloudwatch-container-insights/latest/k8s-deployment-manifest-templates/deployment-mode/daemonset/container-insights-monitoring/cloudwatch-namespace.yaml
      
      - name: Create AWS Agent
        run: kubectl apply -f infras/cloud_watch/cw-agent.yaml

      - name: Create a Service Account for AWS CloudWatch Agent
        run: kubectl apply -f https://raw.githubusercontent.com/aws-samples/amazon-cloudwatch-container-insights/latest/k8s-deployment-manifest-templates/deployment-mode/daemonset/container-insights-monitoring/cwagent/cwagent-serviceaccount.yaml
      
      - name: Deploy the AWS CloudWatch agent as a DaemonSet 
        run: kubectl apply -f https://raw.githubusercontent.com/aws-samples/amazon-cloudwatch-container-insights/latest/k8s-deployment-manifest-templates/deployment-mode/daemonset/container-insights-monitoring/cwagent/cwagent-daemonset.yaml

      - name: Deploy argocd yaml file
        run: kubectl apply -f infras/argocd.yaml

      - name: Chang type ClusterIP to Loadbalancer in argocd
        run: |
          kubectl patch svc argocd-server -n argocd -p '{"spec": {"type": "LoadBalancer"}}'

      - name: Chang type ClusterIP to Loadbalancer in grafana
        run: |
          kubectl patch svc prometheus-grafana -n prometheus -p '{"spec": {"type": "LoadBalancer"}}'
      
      - name: Chang type ClusterIP to Loadbalancer in prometheus
        run: |
          kubectl patch svc prometheus-kube-prometheus-prometheus -n prometheus -p '{"spec": {"type": "LoadBalancer"}}'



      